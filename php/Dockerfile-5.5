FROM php:5.5-fpm-alpine

# Container containing php-fpm and php-cli to run and interact with eZ Platform
#
# It has two modes of operation:
# - (default run.sh cmd) Reconfigure eZ Platform/Publish based on provided env variables and start php-fpm
# - (sh|php|composer) Allows to execute composer, php or bash against the image

# Set defaults for variables used by run.sh
# If you change MAX_EXECUTION TIME, also change fastcgi_read_timeout accordingly in nginx!
ENV TIMEZONE=Europe/Warsaw \
    MEMORY_LIMIT=256M \
    MAX_EXECUTION_TIME=90 \
    PORT=9000 \
    COMPOSER_HOME=/home/ez/.composer


RUN set -xe \
	&& apk add --no-cache --virtual .build-deps \
        freetype-dev \
        libjpeg-turbo-dev \
        libxpm-dev \
        libpng-dev \
        icu-dev \
        libxslt-dev \
        sed \
    && docker-php-ext-configure mysqli --with-mysqli=mysqlnd \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ --with-xpm-dir=/usr/include/ --enable-gd-native-ttf --enable-gd-jis-conv \
    && docker-php-ext-install exif gd mbstring intl xsl zip mysqli pdo_mysql \
    && docker-php-ext-enable opcache \
	&& runDeps="$( \
		scanelf --needed --nobanner --recursive /usr/local \
			| awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
			| sort -u \
			| xargs -r apk info --installed \
			| sort -u \
	)" \
	&& apk add --virtual .php-rundeps $runDeps \
	&& apk del .build-deps

# Set timezone http://wiki.alpinelinux.org/wiki/Setting_the_timezone
#RUN echo $TIMEZONE > /etc/timezone

# Set some php.ini config
RUN cp /usr/src/php/php.ini-production /usr/local/etc/php/php.ini \
 && echo "date.timezone = $TIMEZONE" >> /usr/local/etc/php/php.ini \
 && echo "memory_limit = $MEMORY_LIMIT" >> /usr/local/etc/php/php.ini \
 && echo "max_execution_time = $MAX_EXECUTION_TIME" >> /usr/local/etc/php/php.ini

# Add pid file to be able to restart php-fpm
RUN sed -i "s@^\[global\]@\[global\]\n\npid = /run/php-fpm.pid@" /usr/local/etc/php-fpm.conf

RUN addgroup -g 10000 ez \
 && adduser -g ez -G www-data -u 10000 -h /home/ez -D ez \
 && echo "umask 0002" >> /etc/profile

# Create Composer directory (cache and auth files)
RUN mkdir -p $COMPOSER_HOME && chown ez:ez $COMPOSER_HOME

# Get Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && mv /usr/local/bin/composer.phar /usr/local/bin/composer

# As application is put in as volume we do all needed operation on run
ADD run.sh /run.sh
ADD generate_kickstart_file.sh /generate_kickstart_file.sh
ADD prepare_distribution_volume.sh /prepare_distribution_volume.sh
ADD prepare_behat.sh /prepare_behat.sh
ADD default_mysql_settings.sh /default_mysql_settings.sh
ADD wait_for_db.sh /wait_for_db.sh
ADD set_permissions.sh /set_permissions.sh

# Add some custom config
ADD config/ez-php.ini /usr/local/etc/php/conf.d/ez-php.ini

RUN chmod 755 /*.sh

# Dev packages, planned to be moved to seperate layer
RUN apk add --no-cache --virtual .dev-deps \
    git \
    less \
    mariadb-client \
    vim \
    wget \
    sudo \
    tree \
    unzip

WORKDIR /var/www

CMD /run.sh

EXPOSE 9000
